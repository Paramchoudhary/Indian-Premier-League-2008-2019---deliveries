{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "58264c7f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Importing the libraries\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "254fadda",
   "metadata": {},
   "outputs": [],
   "source": [
    "file_path=\"deliveries.csv\"\n",
    "df=pd.read_csv(file_path)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "44cc38c7",
   "metadata": {},
   "outputs": [],
   "source": [
    "ball_df = pd.read_csv(\"deliveries.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "b2ee9bc7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>match_id</th>\n",
       "      <th>inning</th>\n",
       "      <th>batting_team</th>\n",
       "      <th>bowling_team</th>\n",
       "      <th>over</th>\n",
       "      <th>ball</th>\n",
       "      <th>batsman</th>\n",
       "      <th>non_striker</th>\n",
       "      <th>bowler</th>\n",
       "      <th>is_super_over</th>\n",
       "      <th>...</th>\n",
       "      <th>bye_runs</th>\n",
       "      <th>legbye_runs</th>\n",
       "      <th>noball_runs</th>\n",
       "      <th>penalty_runs</th>\n",
       "      <th>batsman_runs</th>\n",
       "      <th>extra_runs</th>\n",
       "      <th>total_runs</th>\n",
       "      <th>player_dismissed</th>\n",
       "      <th>dismissal_kind</th>\n",
       "      <th>fielder</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Sunrisers Hyderabad</td>\n",
       "      <td>Royal Challengers Bangalore</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>DA Warner</td>\n",
       "      <td>S Dhawan</td>\n",
       "      <td>TS Mills</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Sunrisers Hyderabad</td>\n",
       "      <td>Royal Challengers Bangalore</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>DA Warner</td>\n",
       "      <td>S Dhawan</td>\n",
       "      <td>TS Mills</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Sunrisers Hyderabad</td>\n",
       "      <td>Royal Challengers Bangalore</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>DA Warner</td>\n",
       "      <td>S Dhawan</td>\n",
       "      <td>TS Mills</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Sunrisers Hyderabad</td>\n",
       "      <td>Royal Challengers Bangalore</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>DA Warner</td>\n",
       "      <td>S Dhawan</td>\n",
       "      <td>TS Mills</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Sunrisers Hyderabad</td>\n",
       "      <td>Royal Challengers Bangalore</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>DA Warner</td>\n",
       "      <td>S Dhawan</td>\n",
       "      <td>TS Mills</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179073</th>\n",
       "      <td>11415</td>\n",
       "      <td>2</td>\n",
       "      <td>Chennai Super Kings</td>\n",
       "      <td>Mumbai Indians</td>\n",
       "      <td>20</td>\n",
       "      <td>2</td>\n",
       "      <td>RA Jadeja</td>\n",
       "      <td>SR Watson</td>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179074</th>\n",
       "      <td>11415</td>\n",
       "      <td>2</td>\n",
       "      <td>Chennai Super Kings</td>\n",
       "      <td>Mumbai Indians</td>\n",
       "      <td>20</td>\n",
       "      <td>3</td>\n",
       "      <td>SR Watson</td>\n",
       "      <td>RA Jadeja</td>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179075</th>\n",
       "      <td>11415</td>\n",
       "      <td>2</td>\n",
       "      <td>Chennai Super Kings</td>\n",
       "      <td>Mumbai Indians</td>\n",
       "      <td>20</td>\n",
       "      <td>4</td>\n",
       "      <td>SR Watson</td>\n",
       "      <td>RA Jadeja</td>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>SR Watson</td>\n",
       "      <td>run out</td>\n",
       "      <td>KH Pandya</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179076</th>\n",
       "      <td>11415</td>\n",
       "      <td>2</td>\n",
       "      <td>Chennai Super Kings</td>\n",
       "      <td>Mumbai Indians</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>SN Thakur</td>\n",
       "      <td>RA Jadeja</td>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179077</th>\n",
       "      <td>11415</td>\n",
       "      <td>2</td>\n",
       "      <td>Chennai Super Kings</td>\n",
       "      <td>Mumbai Indians</td>\n",
       "      <td>20</td>\n",
       "      <td>6</td>\n",
       "      <td>SN Thakur</td>\n",
       "      <td>RA Jadeja</td>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>SN Thakur</td>\n",
       "      <td>lbw</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>179078 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        match_id  inning         batting_team                 bowling_team  \\\n",
       "0              1       1  Sunrisers Hyderabad  Royal Challengers Bangalore   \n",
       "1              1       1  Sunrisers Hyderabad  Royal Challengers Bangalore   \n",
       "2              1       1  Sunrisers Hyderabad  Royal Challengers Bangalore   \n",
       "3              1       1  Sunrisers Hyderabad  Royal Challengers Bangalore   \n",
       "4              1       1  Sunrisers Hyderabad  Royal Challengers Bangalore   \n",
       "...          ...     ...                  ...                          ...   \n",
       "179073     11415       2  Chennai Super Kings               Mumbai Indians   \n",
       "179074     11415       2  Chennai Super Kings               Mumbai Indians   \n",
       "179075     11415       2  Chennai Super Kings               Mumbai Indians   \n",
       "179076     11415       2  Chennai Super Kings               Mumbai Indians   \n",
       "179077     11415       2  Chennai Super Kings               Mumbai Indians   \n",
       "\n",
       "        over  ball    batsman non_striker      bowler  is_super_over  ...  \\\n",
       "0          1     1  DA Warner    S Dhawan    TS Mills              0  ...   \n",
       "1          1     2  DA Warner    S Dhawan    TS Mills              0  ...   \n",
       "2          1     3  DA Warner    S Dhawan    TS Mills              0  ...   \n",
       "3          1     4  DA Warner    S Dhawan    TS Mills              0  ...   \n",
       "4          1     5  DA Warner    S Dhawan    TS Mills              0  ...   \n",
       "...      ...   ...        ...         ...         ...            ...  ...   \n",
       "179073    20     2  RA Jadeja   SR Watson  SL Malinga              0  ...   \n",
       "179074    20     3  SR Watson   RA Jadeja  SL Malinga              0  ...   \n",
       "179075    20     4  SR Watson   RA Jadeja  SL Malinga              0  ...   \n",
       "179076    20     5  SN Thakur   RA Jadeja  SL Malinga              0  ...   \n",
       "179077    20     6  SN Thakur   RA Jadeja  SL Malinga              0  ...   \n",
       "\n",
       "        bye_runs  legbye_runs  noball_runs  penalty_runs  batsman_runs  \\\n",
       "0              0            0            0             0             0   \n",
       "1              0            0            0             0             0   \n",
       "2              0            0            0             0             4   \n",
       "3              0            0            0             0             0   \n",
       "4              0            0            0             0             0   \n",
       "...          ...          ...          ...           ...           ...   \n",
       "179073         0            0            0             0             1   \n",
       "179074         0            0            0             0             2   \n",
       "179075         0            0            0             0             1   \n",
       "179076         0            0            0             0             2   \n",
       "179077         0            0            0             0             0   \n",
       "\n",
       "        extra_runs  total_runs  player_dismissed dismissal_kind    fielder  \n",
       "0                0           0               NaN            NaN        NaN  \n",
       "1                0           0               NaN            NaN        NaN  \n",
       "2                0           4               NaN            NaN        NaN  \n",
       "3                0           0               NaN            NaN        NaN  \n",
       "4                2           2               NaN            NaN        NaN  \n",
       "...            ...         ...               ...            ...        ...  \n",
       "179073           0           1               NaN            NaN        NaN  \n",
       "179074           0           2               NaN            NaN        NaN  \n",
       "179075           0           1         SR Watson        run out  KH Pandya  \n",
       "179076           0           2               NaN            NaN        NaN  \n",
       "179077           0           0         SN Thakur            lbw        NaN  \n",
       "\n",
       "[179078 rows x 21 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ball_df\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "3c40e488",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There are 179078 rows and 21 columns in our deliveries Dataset.\n"
     ]
    }
   ],
   "source": [
    "numberofrows_1, numberofcolumns_1 = ball_df.shape\n",
    "print('There are {} rows and {} columns'.format(numberofrows_1, numberofcolumns_1)+' in our deliveries Dataset.')\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "b7f6f99e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 179078 entries, 0 to 179077\n",
      "Data columns (total 21 columns):\n",
      " #   Column            Non-Null Count   Dtype \n",
      "---  ------            --------------   ----- \n",
      " 0   match_id          179078 non-null  int64 \n",
      " 1   inning            179078 non-null  int64 \n",
      " 2   batting_team      179078 non-null  object\n",
      " 3   bowling_team      179078 non-null  object\n",
      " 4   over              179078 non-null  int64 \n",
      " 5   ball              179078 non-null  int64 \n",
      " 6   batsman           179078 non-null  object\n",
      " 7   non_striker       179078 non-null  object\n",
      " 8   bowler            179078 non-null  object\n",
      " 9   is_super_over     179078 non-null  int64 \n",
      " 10  wide_runs         179078 non-null  int64 \n",
      " 11  bye_runs          179078 non-null  int64 \n",
      " 12  legbye_runs       179078 non-null  int64 \n",
      " 13  noball_runs       179078 non-null  int64 \n",
      " 14  penalty_runs      179078 non-null  int64 \n",
      " 15  batsman_runs      179078 non-null  int64 \n",
      " 16  extra_runs        179078 non-null  int64 \n",
      " 17  total_runs        179078 non-null  int64 \n",
      " 18  player_dismissed  8834 non-null    object\n",
      " 19  dismissal_kind    8834 non-null    object\n",
      " 20  fielder           6448 non-null    object\n",
      "dtypes: int64(13), object(8)\n",
      "memory usage: 28.7+ MB\n"
     ]
    }
   ],
   "source": [
    "ball_df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "bb2d1943",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "match_id             int64\n",
       "inning               int64\n",
       "batting_team        object\n",
       "bowling_team        object\n",
       "over                 int64\n",
       "ball                 int64\n",
       "batsman             object\n",
       "non_striker         object\n",
       "bowler              object\n",
       "is_super_over        int64\n",
       "wide_runs            int64\n",
       "bye_runs             int64\n",
       "legbye_runs          int64\n",
       "noball_runs          int64\n",
       "penalty_runs         int64\n",
       "batsman_runs         int64\n",
       "extra_runs           int64\n",
       "total_runs           int64\n",
       "player_dismissed    object\n",
       "dismissal_kind      object\n",
       "fielder             object\n",
       "dtype: object"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ball_df.dtypes\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "5c12a288",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>match_id</th>\n",
       "      <th>inning</th>\n",
       "      <th>over</th>\n",
       "      <th>ball</th>\n",
       "      <th>is_super_over</th>\n",
       "      <th>wide_runs</th>\n",
       "      <th>bye_runs</th>\n",
       "      <th>legbye_runs</th>\n",
       "      <th>noball_runs</th>\n",
       "      <th>penalty_runs</th>\n",
       "      <th>batsman_runs</th>\n",
       "      <th>extra_runs</th>\n",
       "      <th>total_runs</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>179078.000000</td>\n",
       "      <td>179078.000000</td>\n",
       "      <td>179078.000000</td>\n",
       "      <td>179078.000000</td>\n",
       "      <td>179078.000000</td>\n",
       "      <td>179078.000000</td>\n",
       "      <td>179078.000000</td>\n",
       "      <td>179078.000000</td>\n",
       "      <td>179078.000000</td>\n",
       "      <td>179078.000000</td>\n",
       "      <td>179078.000000</td>\n",
       "      <td>179078.000000</td>\n",
       "      <td>179078.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1802.252957</td>\n",
       "      <td>1.482952</td>\n",
       "      <td>10.162488</td>\n",
       "      <td>3.615587</td>\n",
       "      <td>0.000452</td>\n",
       "      <td>0.036721</td>\n",
       "      <td>0.004936</td>\n",
       "      <td>0.021136</td>\n",
       "      <td>0.004183</td>\n",
       "      <td>0.000056</td>\n",
       "      <td>1.246864</td>\n",
       "      <td>0.067032</td>\n",
       "      <td>1.313897</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>3472.322805</td>\n",
       "      <td>0.502074</td>\n",
       "      <td>5.677684</td>\n",
       "      <td>1.806966</td>\n",
       "      <td>0.021263</td>\n",
       "      <td>0.251161</td>\n",
       "      <td>0.116480</td>\n",
       "      <td>0.194908</td>\n",
       "      <td>0.070492</td>\n",
       "      <td>0.016709</td>\n",
       "      <td>1.608270</td>\n",
       "      <td>0.342553</td>\n",
       "      <td>1.605422</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>190.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>379.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>567.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>11415.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>10.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            match_id         inning           over           ball  \\\n",
       "count  179078.000000  179078.000000  179078.000000  179078.000000   \n",
       "mean     1802.252957       1.482952      10.162488       3.615587   \n",
       "std      3472.322805       0.502074       5.677684       1.806966   \n",
       "min         1.000000       1.000000       1.000000       1.000000   \n",
       "25%       190.000000       1.000000       5.000000       2.000000   \n",
       "50%       379.000000       1.000000      10.000000       4.000000   \n",
       "75%       567.000000       2.000000      15.000000       5.000000   \n",
       "max     11415.000000       5.000000      20.000000       9.000000   \n",
       "\n",
       "       is_super_over      wide_runs       bye_runs    legbye_runs  \\\n",
       "count  179078.000000  179078.000000  179078.000000  179078.000000   \n",
       "mean        0.000452       0.036721       0.004936       0.021136   \n",
       "std         0.021263       0.251161       0.116480       0.194908   \n",
       "min         0.000000       0.000000       0.000000       0.000000   \n",
       "25%         0.000000       0.000000       0.000000       0.000000   \n",
       "50%         0.000000       0.000000       0.000000       0.000000   \n",
       "75%         0.000000       0.000000       0.000000       0.000000   \n",
       "max         1.000000       5.000000       4.000000       5.000000   \n",
       "\n",
       "         noball_runs   penalty_runs   batsman_runs     extra_runs  \\\n",
       "count  179078.000000  179078.000000  179078.000000  179078.000000   \n",
       "mean        0.004183       0.000056       1.246864       0.067032   \n",
       "std         0.070492       0.016709       1.608270       0.342553   \n",
       "min         0.000000       0.000000       0.000000       0.000000   \n",
       "25%         0.000000       0.000000       0.000000       0.000000   \n",
       "50%         0.000000       0.000000       1.000000       0.000000   \n",
       "75%         0.000000       0.000000       1.000000       0.000000   \n",
       "max         5.000000       5.000000       7.000000       7.000000   \n",
       "\n",
       "          total_runs  \n",
       "count  179078.000000  \n",
       "mean        1.313897  \n",
       "std         1.605422  \n",
       "min         0.000000  \n",
       "25%         0.000000  \n",
       "50%         1.000000  \n",
       "75%         1.000000  \n",
       "max        10.000000  "
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ball_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "ba99538f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "There are 179078 rows and 21 columns in our modified smoke Dataset.\n"
     ]
    }
   ],
   "source": [
    "print('There are {} rows and {} columns'.format(ball_df.shape[0], ball_df.shape[1])+' in our modified smoke Dataset.')\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "b8ea97f9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unique Values</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>match_id</th>\n",
       "      <td>756</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>inning</th>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>batting_team</th>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bowling_team</th>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>over</th>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ball</th>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>batsman</th>\n",
       "      <td>516</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>non_striker</th>\n",
       "      <td>511</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bowler</th>\n",
       "      <td>405</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>is_super_over</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wide_runs</th>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bye_runs</th>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>legbye_runs</th>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>noball_runs</th>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>penalty_runs</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>batsman_runs</th>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>extra_runs</th>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total_runs</th>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>player_dismissed</th>\n",
       "      <td>487</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>dismissal_kind</th>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fielder</th>\n",
       "      <td>499</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Unique Values\n",
       "match_id                    756\n",
       "inning                        5\n",
       "batting_team                 15\n",
       "bowling_team                 15\n",
       "over                         20\n",
       "ball                          9\n",
       "batsman                     516\n",
       "non_striker                 511\n",
       "bowler                      405\n",
       "is_super_over                 2\n",
       "wide_runs                     6\n",
       "bye_runs                      5\n",
       "legbye_runs                   6\n",
       "noball_runs                   5\n",
       "penalty_runs                  2\n",
       "batsman_runs                  8\n",
       "extra_runs                    7\n",
       "total_runs                   10\n",
       "player_dismissed            487\n",
       "dismissal_kind                9\n",
       "fielder                     499"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ball_df.nunique().to_frame(name = 'Unique Values')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "43f8d7c4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>29047</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>28963</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>28878</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>28812</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>28720</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Count\n",
       "1  29047\n",
       "2  28963\n",
       "3  28878\n",
       "4  28812\n",
       "5  28720"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ball_df['ball'].value_counts().to_frame(name = 'Count').head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "fc66f326",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "No. of duplicated entries:  23\n",
      "        match_id  inning      batting_team                 bowling_team  over  \\\n",
      "52169        221       1    Mumbai Indians             Delhi Daredevils     4   \n",
      "52178        221       1    Mumbai Indians             Delhi Daredevils     4   \n",
      "162803      7946       1  Rajasthan Royals  Royal Challengers Bangalore     4   \n",
      "162805      7946       1  Rajasthan Royals  Royal Challengers Bangalore     4   \n",
      "162804      7946       1  Rajasthan Royals  Royal Challengers Bangalore     4   \n",
      "\n",
      "        ball       batsman  non_striker      bowler  is_super_over  ...  \\\n",
      "52169      1  SR Tendulkar      C Madan  PJ Sangwan              0  ...   \n",
      "52178      1  SR Tendulkar      C Madan  PJ Sangwan              0  ...   \n",
      "162803     4     AM Rahane  RA Tripathi    UT Yadav              0  ...   \n",
      "162805     4     AM Rahane  RA Tripathi    UT Yadav              0  ...   \n",
      "162804     5     AM Rahane  RA Tripathi    UT Yadav              0  ...   \n",
      "\n",
      "        bye_runs  legbye_runs  noball_runs  penalty_runs  batsman_runs  \\\n",
      "52169          0            0            0             0             1   \n",
      "52178          0            0            0             0             1   \n",
      "162803         0            0            0             0             4   \n",
      "162805         0            0            0             0             4   \n",
      "162804         0            0            0             0             1   \n",
      "\n",
      "        extra_runs  total_runs  player_dismissed dismissal_kind fielder  \n",
      "52169            0           1               NaN            NaN     NaN  \n",
      "52178            0           1               NaN            NaN     NaN  \n",
      "162803           0           4               NaN            NaN     NaN  \n",
      "162805           0           4               NaN            NaN     NaN  \n",
      "162804           0           1               NaN            NaN     NaN  \n",
      "\n",
      "[5 rows x 21 columns]\n"
     ]
    }
   ],
   "source": [
    "# Generate count statistics of duplicate entries\n",
    "\n",
    "if (len(ball_df[smoke_df.duplicated()]) > 0):\n",
    "    print('No. of duplicated entries: ', len(ball_df[ball_df.duplicated()]))\n",
    "    print(ball_df[smoke_df.duplicated(keep = False)].sort_values(by = list(ball_df.columns)).head())\n",
    "else:\n",
    "    print('No duplicated entries found.')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "3429e1ef",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(179078, 21)"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ball_df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "b576f72e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='ball', ylabel='Count'>"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.histplot(x='ball', data=ball_df,kde=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "85783e42",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='ball', ylabel='Count'>"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.histplot(x='ball', data=smoke_df,kde=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "5754a74c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x18000 with 13 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cols = 3\n",
    "rows = 50\n",
    "num_cols = ball_df.select_dtypes(exclude='object').columns\n",
    "fig = plt.figure( figsize=(cols*5, rows*5))\n",
    "for i, col in enumerate(num_cols):\n",
    "#for i in num_cols:    \n",
    "    ax=fig.add_subplot(rows,cols,i+1)\n",
    "    \n",
    "    sns.histplot(x = ball_df[col], ax = ax)\n",
    "    \n",
    "fig.tight_layout()  \n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "7b1787be",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='ball', ylabel='Density'>"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 2. KDE PLOT - Kernal Density Plot - sns.kdeplot()\n",
    "sns.kdeplot(x='ball', data=ball_df, hue=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "c1d0db65",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>match_id</th>\n",
       "      <th>inning</th>\n",
       "      <th>over</th>\n",
       "      <th>ball</th>\n",
       "      <th>is_super_over</th>\n",
       "      <th>wide_runs</th>\n",
       "      <th>bye_runs</th>\n",
       "      <th>legbye_runs</th>\n",
       "      <th>noball_runs</th>\n",
       "      <th>penalty_runs</th>\n",
       "      <th>batsman_runs</th>\n",
       "      <th>extra_runs</th>\n",
       "      <th>total_runs</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>match_id</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.003958</td>\n",
       "      <td>0.008268</td>\n",
       "      <td>-0.001349</td>\n",
       "      <td>-0.009150</td>\n",
       "      <td>-0.007549</td>\n",
       "      <td>0.000905</td>\n",
       "      <td>-0.012429</td>\n",
       "      <td>-0.004623</td>\n",
       "      <td>-0.001475</td>\n",
       "      <td>0.033510</td>\n",
       "      <td>-0.013323</td>\n",
       "      <td>0.030727</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>inning</th>\n",
       "      <td>0.003958</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.050076</td>\n",
       "      <td>-0.003943</td>\n",
       "      <td>0.084154</td>\n",
       "      <td>0.001201</td>\n",
       "      <td>-0.000757</td>\n",
       "      <td>-0.001996</td>\n",
       "      <td>-0.000904</td>\n",
       "      <td>0.003442</td>\n",
       "      <td>-0.005362</td>\n",
       "      <td>-0.000531</td>\n",
       "      <td>-0.005485</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>over</th>\n",
       "      <td>0.008268</td>\n",
       "      <td>-0.050076</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.007424</td>\n",
       "      <td>-0.034329</td>\n",
       "      <td>-0.010003</td>\n",
       "      <td>0.012111</td>\n",
       "      <td>-0.004764</td>\n",
       "      <td>0.016984</td>\n",
       "      <td>-0.000979</td>\n",
       "      <td>0.086701</td>\n",
       "      <td>-0.002479</td>\n",
       "      <td>0.086326</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ball</th>\n",
       "      <td>-0.001349</td>\n",
       "      <td>-0.003943</td>\n",
       "      <td>-0.007424</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.001143</td>\n",
       "      <td>-0.004665</td>\n",
       "      <td>0.006602</td>\n",
       "      <td>-0.002727</td>\n",
       "      <td>0.000567</td>\n",
       "      <td>0.000711</td>\n",
       "      <td>0.007950</td>\n",
       "      <td>-0.002576</td>\n",
       "      <td>0.007414</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>is_super_over</th>\n",
       "      <td>-0.009150</td>\n",
       "      <td>0.084154</td>\n",
       "      <td>-0.034329</td>\n",
       "      <td>-0.001143</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.001019</td>\n",
       "      <td>0.001353</td>\n",
       "      <td>0.001735</td>\n",
       "      <td>0.013640</td>\n",
       "      <td>-0.000071</td>\n",
       "      <td>0.010125</td>\n",
       "      <td>0.003504</td>\n",
       "      <td>0.010891</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>wide_runs</th>\n",
       "      <td>-0.007549</td>\n",
       "      <td>0.001201</td>\n",
       "      <td>-0.010003</td>\n",
       "      <td>-0.004665</td>\n",
       "      <td>-0.001019</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.006196</td>\n",
       "      <td>-0.015855</td>\n",
       "      <td>-0.008675</td>\n",
       "      <td>0.012817</td>\n",
       "      <td>-0.094579</td>\n",
       "      <td>0.720916</td>\n",
       "      <td>0.059077</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bye_runs</th>\n",
       "      <td>0.000905</td>\n",
       "      <td>-0.000757</td>\n",
       "      <td>0.012111</td>\n",
       "      <td>0.006602</td>\n",
       "      <td>0.001353</td>\n",
       "      <td>-0.006196</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.004596</td>\n",
       "      <td>-0.002515</td>\n",
       "      <td>-0.000142</td>\n",
       "      <td>-0.018936</td>\n",
       "      <td>0.332352</td>\n",
       "      <td>0.051946</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>legbye_runs</th>\n",
       "      <td>-0.012429</td>\n",
       "      <td>-0.001996</td>\n",
       "      <td>-0.004764</td>\n",
       "      <td>-0.002727</td>\n",
       "      <td>0.001735</td>\n",
       "      <td>-0.015855</td>\n",
       "      <td>-0.004596</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.006434</td>\n",
       "      <td>-0.000362</td>\n",
       "      <td>-0.070106</td>\n",
       "      <td>0.554458</td>\n",
       "      <td>0.048075</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>noball_runs</th>\n",
       "      <td>-0.004623</td>\n",
       "      <td>-0.000904</td>\n",
       "      <td>0.016984</td>\n",
       "      <td>0.000567</td>\n",
       "      <td>0.013640</td>\n",
       "      <td>-0.008675</td>\n",
       "      <td>-0.002515</td>\n",
       "      <td>-0.006434</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.000198</td>\n",
       "      <td>0.004832</td>\n",
       "      <td>0.194899</td>\n",
       "      <td>0.046427</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>penalty_runs</th>\n",
       "      <td>-0.001475</td>\n",
       "      <td>0.003442</td>\n",
       "      <td>-0.000979</td>\n",
       "      <td>0.000711</td>\n",
       "      <td>-0.000071</td>\n",
       "      <td>0.012817</td>\n",
       "      <td>-0.000142</td>\n",
       "      <td>-0.000362</td>\n",
       "      <td>-0.000198</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.002591</td>\n",
       "      <td>0.057882</td>\n",
       "      <td>0.009755</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>batsman_runs</th>\n",
       "      <td>0.033510</td>\n",
       "      <td>-0.005362</td>\n",
       "      <td>0.086701</td>\n",
       "      <td>0.007950</td>\n",
       "      <td>0.010125</td>\n",
       "      <td>-0.094579</td>\n",
       "      <td>-0.018936</td>\n",
       "      <td>-0.070106</td>\n",
       "      <td>0.004832</td>\n",
       "      <td>-0.002591</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.114806</td>\n",
       "      <td>0.977278</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>extra_runs</th>\n",
       "      <td>-0.013323</td>\n",
       "      <td>-0.000531</td>\n",
       "      <td>-0.002479</td>\n",
       "      <td>-0.002576</td>\n",
       "      <td>0.003504</td>\n",
       "      <td>0.720916</td>\n",
       "      <td>0.332352</td>\n",
       "      <td>0.554458</td>\n",
       "      <td>0.194899</td>\n",
       "      <td>0.057882</td>\n",
       "      <td>-0.114806</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.098363</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total_runs</th>\n",
       "      <td>0.030727</td>\n",
       "      <td>-0.005485</td>\n",
       "      <td>0.086326</td>\n",
       "      <td>0.007414</td>\n",
       "      <td>0.010891</td>\n",
       "      <td>0.059077</td>\n",
       "      <td>0.051946</td>\n",
       "      <td>0.048075</td>\n",
       "      <td>0.046427</td>\n",
       "      <td>0.009755</td>\n",
       "      <td>0.977278</td>\n",
       "      <td>0.098363</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               match_id    inning      over      ball  is_super_over  \\\n",
       "match_id       1.000000  0.003958  0.008268 -0.001349      -0.009150   \n",
       "inning         0.003958  1.000000 -0.050076 -0.003943       0.084154   \n",
       "over           0.008268 -0.050076  1.000000 -0.007424      -0.034329   \n",
       "ball          -0.001349 -0.003943 -0.007424  1.000000      -0.001143   \n",
       "is_super_over -0.009150  0.084154 -0.034329 -0.001143       1.000000   \n",
       "wide_runs     -0.007549  0.001201 -0.010003 -0.004665      -0.001019   \n",
       "bye_runs       0.000905 -0.000757  0.012111  0.006602       0.001353   \n",
       "legbye_runs   -0.012429 -0.001996 -0.004764 -0.002727       0.001735   \n",
       "noball_runs   -0.004623 -0.000904  0.016984  0.000567       0.013640   \n",
       "penalty_runs  -0.001475  0.003442 -0.000979  0.000711      -0.000071   \n",
       "batsman_runs   0.033510 -0.005362  0.086701  0.007950       0.010125   \n",
       "extra_runs    -0.013323 -0.000531 -0.002479 -0.002576       0.003504   \n",
       "total_runs     0.030727 -0.005485  0.086326  0.007414       0.010891   \n",
       "\n",
       "               wide_runs  bye_runs  legbye_runs  noball_runs  penalty_runs  \\\n",
       "match_id       -0.007549  0.000905    -0.012429    -0.004623     -0.001475   \n",
       "inning          0.001201 -0.000757    -0.001996    -0.000904      0.003442   \n",
       "over           -0.010003  0.012111    -0.004764     0.016984     -0.000979   \n",
       "ball           -0.004665  0.006602    -0.002727     0.000567      0.000711   \n",
       "is_super_over  -0.001019  0.001353     0.001735     0.013640     -0.000071   \n",
       "wide_runs       1.000000 -0.006196    -0.015855    -0.008675      0.012817   \n",
       "bye_runs       -0.006196  1.000000    -0.004596    -0.002515     -0.000142   \n",
       "legbye_runs    -0.015855 -0.004596     1.000000    -0.006434     -0.000362   \n",
       "noball_runs    -0.008675 -0.002515    -0.006434     1.000000     -0.000198   \n",
       "penalty_runs    0.012817 -0.000142    -0.000362    -0.000198      1.000000   \n",
       "batsman_runs   -0.094579 -0.018936    -0.070106     0.004832     -0.002591   \n",
       "extra_runs      0.720916  0.332352     0.554458     0.194899      0.057882   \n",
       "total_runs      0.059077  0.051946     0.048075     0.046427      0.009755   \n",
       "\n",
       "               batsman_runs  extra_runs  total_runs  \n",
       "match_id           0.033510   -0.013323    0.030727  \n",
       "inning            -0.005362   -0.000531   -0.005485  \n",
       "over               0.086701   -0.002479    0.086326  \n",
       "ball               0.007950   -0.002576    0.007414  \n",
       "is_super_over      0.010125    0.003504    0.010891  \n",
       "wide_runs         -0.094579    0.720916    0.059077  \n",
       "bye_runs          -0.018936    0.332352    0.051946  \n",
       "legbye_runs       -0.070106    0.554458    0.048075  \n",
       "noball_runs        0.004832    0.194899    0.046427  \n",
       "penalty_runs      -0.002591    0.057882    0.009755  \n",
       "batsman_runs       1.000000   -0.114806    0.977278  \n",
       "extra_runs        -0.114806    1.000000    0.098363  \n",
       "total_runs         0.977278    0.098363    1.000000  "
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ball_df.corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "769576e7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "wide_runs       -0.008675\n",
       "legbye_runs     -0.006434\n",
       "match_id        -0.004623\n",
       "bye_runs        -0.002515\n",
       "inning          -0.000904\n",
       "penalty_runs    -0.000198\n",
       "ball             0.000567\n",
       "batsman_runs     0.004832\n",
       "is_super_over    0.013640\n",
       "over             0.016984\n",
       "total_runs       0.046427\n",
       "extra_runs       0.194899\n",
       "noball_runs      1.000000\n",
       "Name: noball_runs, dtype: float64"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ball_df.corr()['noball_runs'].sort_values()\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
